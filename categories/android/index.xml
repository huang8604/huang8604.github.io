<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android - 分类 - 文韬的文档</title><link>https://huang8604.github.io/categories/android/</link><description>简单记录工作总结💼，学习整理。💰🍺</description><generator>Hugo 0.152.2 &amp; FixIt v0.3.20</generator><language>zh-CN</language><managingEditor>huang8604@163.com (wentao)</managingEditor><webMaster>huang8604@163.com (wentao)</webMaster><lastBuildDate>Tue, 05 Nov 2024 01:34:06 +0000</lastBuildDate><atom:link href="https://huang8604.github.io/categories/android/index.xml" rel="self" type="application/rss+xml"/><item><title>开机优化</title><link>https://huang8604.github.io/posts/%E5%BC%80%E6%9C%BA%E4%BC%98%E5%8C%96/</link><pubDate>Wed, 06 Nov 2024 06:57:59 +0000</pubDate><author>huang8604@163.com (wentao)</author><guid>https://huang8604.github.io/posts/%E5%BC%80%E6%9C%BA%E4%BC%98%E5%8C%96/</guid><category domain="https://huang8604.github.io/categories/android/">Android</category><description>&lt;p&gt;&lt;a class="lightgallery" href="https://picgo.myjojo.fun:666/i/2024/08/30/66d15ffcd3583.png" title="image.png" data-thumbnail="https://picgo.myjojo.fun:666/i/2024/08/30/66d15ffcd3583.png" data-sub-html="&lt;h2&gt;image.png&lt;/h2&gt;"&gt;&lt;img loading="lazy" src='https://picgo.myjojo.fun:666/i/2024/08/30/66d15ffcd3583.png' alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
根据开机的阶段，有一些优化开机速度的空间&lt;/p&gt;
&lt;h4 class="heading-element" id="1-bootloader阶段"&gt;&lt;span&gt;1. bootloader阶段&lt;/span&gt;
 &lt;a href="#1-bootloader%e9%98%b6%e6%ae%b5" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;这边涉及的系统的稳定性，能修改的地方不多。&lt;br&gt;
最多的是去处log，对性能提升不明显，并且对后期问题的分析有比较大的影响。&lt;/p&gt;</description></item><item><title>启动流程分析</title><link>https://huang8604.github.io/posts/%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/</link><pubDate>Wed, 06 Nov 2024 06:57:59 +0000</pubDate><author>huang8604@163.com (wentao)</author><guid>https://huang8604.github.io/posts/%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/</guid><category domain="https://huang8604.github.io/categories/android/">Android</category><description>&lt;h4 class="heading-element" id="开机流程"&gt;&lt;span&gt;开机流程&lt;/span&gt;
 &lt;a href="#%e5%bc%80%e6%9c%ba%e6%b5%81%e7%a8%8b" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;h5 class="heading-element" id="bootloader-引导系统"&gt;&lt;span&gt;bootloader 引导系统&lt;/span&gt;
 &lt;a href="#bootloader-%e5%bc%95%e5%af%bc%e7%b3%bb%e7%bb%9f" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h5&gt;&lt;h5 class="heading-element" id="内核启动-idle"&gt;&lt;span&gt;内核启动 idle&lt;/span&gt;
 &lt;a href="#%e5%86%85%e6%a0%b8%e5%90%af%e5%8a%a8-idle" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h5&gt;&lt;p&gt;&lt;a class="lightgallery" href="https://picgo.myjojo.fun:666/i/2024/09/18/66ea3774e683c.png" title="image.png" data-thumbnail="https://picgo.myjojo.fun:666/i/2024/09/18/66ea3774e683c.png" data-sub-html="&lt;h2&gt;image.png&lt;/h2&gt;"&gt;&lt;img loading="lazy" src='https://picgo.myjojo.fun:666/i/2024/09/18/66ea3774e683c.png' alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;</description></item><item><title>CTS 在内网机器如何测试</title><link>https://huang8604.github.io/posts/cts-%E5%9C%A8%E5%86%85%E7%BD%91%E6%9C%BA%E5%99%A8%E5%A6%82%E4%BD%95%E6%B5%8B%E8%AF%95/</link><pubDate>Wed, 06 Nov 2024 06:57:58 +0000</pubDate><author>huang8604@163.com (wentao)</author><guid>https://huang8604.github.io/posts/cts-%E5%9C%A8%E5%86%85%E7%BD%91%E6%9C%BA%E5%99%A8%E5%A6%82%E4%BD%95%E6%B5%8B%E8%AF%95/</guid><category domain="https://huang8604.github.io/categories/android/">Android</category><category domain="https://huang8604.github.io/categories/ubuntu/">Ubuntu</category><description>&lt;p&gt;新版本的CTS工具，需要连接外网才能够测试，以往的版本是不需要的。&lt;/p&gt;
&lt;p&gt;根据出错log，和源码&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cs.android.com/android/platform/superproject/&amp;#43;/master:tools/tradefederation/core/clearcut_client/com/android/tradefed/clearcut/ClearcutClient.java;drc=111c872ed55b5aed61fb905df39122913293d81d;l=133"target="_blank" rel="external nofollow noopener noreferrer"&gt;Site Unreachable&lt;/a&gt;&lt;/p&gt;
&lt;h6 class="heading-element" id="disable_clearcut_key"&gt;&lt;span&gt;DISABLE_CLEARCUT_KEY&lt;/span&gt;
 &lt;a href="#disable_clearcut_key" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h6&gt;&lt;p&gt;出错log&lt;/p&gt;</description></item><item><title>自动开关机脚本</title><link>https://huang8604.github.io/posts/%E8%87%AA%E5%8A%A8%E5%BC%80%E5%85%B3%E6%9C%BA%E8%84%9A%E6%9C%AC/</link><pubDate>Wed, 06 Nov 2024 06:57:58 +0000</pubDate><author>huang8604@163.com (wentao)</author><guid>https://huang8604.github.io/posts/%E8%87%AA%E5%8A%A8%E5%BC%80%E5%85%B3%E6%9C%BA%E8%84%9A%E6%9C%AC/</guid><category domain="https://huang8604.github.io/categories/android/">Android</category><category domain="https://huang8604.github.io/categories/ubuntu/">Ubuntu</category><description>&lt;p&gt;reboot_test.sh&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;span class="lnt"&gt;24
&lt;/span&gt;&lt;span class="lnt"&gt;25
&lt;/span&gt;&lt;span class="lnt"&gt;26
&lt;/span&gt;&lt;span class="lnt"&gt;27
&lt;/span&gt;&lt;span class="lnt"&gt;28
&lt;/span&gt;&lt;span class="lnt"&gt;29
&lt;/span&gt;&lt;span class="lnt"&gt;30
&lt;/span&gt;&lt;span class="lnt"&gt;31
&lt;/span&gt;&lt;span class="lnt"&gt;32
&lt;/span&gt;&lt;span class="lnt"&gt;33
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#Navy add for reboot/factory-reset test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#adb reboot&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#adb reboot factory-reset&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#默认开关机测试次数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;rebootNum&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#开关机设备ID号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;deviceId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;null
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;#开关机间隔时间&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;rebootInterval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$#&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;rebootNum&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$#&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;rebootNum&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;deviceId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; -le &lt;span class="nv"&gt;$rebootNum&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$deviceId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ &lt;span class="s2"&gt;&amp;#34;null&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;reboot test num&amp;#34;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; adb reboot
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;reboot &amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$deviceId&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34; test num &amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; adb -s &lt;span class="nv"&gt;$deviceId&lt;/span&gt; reboot
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sleep &lt;span class="nv"&gt;$rebootInterval&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;let&lt;/span&gt; i++
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>adsp wristdown 流程与实现</title><link>https://huang8604.github.io/posts/adsp-wristdown-%E6%B5%81%E7%A8%8B%E4%B8%8E%E5%AE%9E%E7%8E%B0/</link><pubDate>Wed, 06 Nov 2024 06:57:56 +0000</pubDate><author>huang8604@163.com (wentao)</author><guid>https://huang8604.github.io/posts/adsp-wristdown-%E6%B5%81%E7%A8%8B%E4%B8%8E%E5%AE%9E%E7%8E%B0/</guid><category domain="https://huang8604.github.io/categories/android/">Android</category><description>&lt;p&gt;#Peppermill #算法研究&lt;/p&gt;
&lt;p&gt;目前 落腕灭屏算法大致在 framework 层实现。&lt;br&gt;
目前算法的思路：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#%E8%BF%90%E5%8A%A8%E6%A3%80%E6%B5%8B"&gt;#运动检测&lt;/a&gt;，通过一些特征值，来判断是否是一个运动段落。&lt;/li&gt;
&lt;li&gt;符合的运动检测后，我们来判断是否是落腕的动作。&lt;/li&gt;
&lt;li&gt;符合的落腕的动作后，sensor 上报 event。 framework 监听获取后进行灭屏的判断动作。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 class="heading-element" id="背景介绍"&gt;&lt;span&gt;背景介绍&lt;/span&gt;
 &lt;a href="#%e8%83%8c%e6%99%af%e4%bb%8b%e7%bb%8d" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;早起的 Android 平台，Sensor 是放在 AP 侧实现的，Sensor 生成设备节点供上层使用，Sensor 的工作 CPU 就不能完好的休眠。&lt;br&gt;
后续的高版本 android 各个平台厂商都有了不同的方案，SensorHub，ADSP&lt;/p&gt;</description></item><item><title>Android 记录系统空间的高通答疑</title><link>https://huang8604.github.io/posts/android-%E8%AE%B0%E5%BD%95%E7%B3%BB%E7%BB%9F%E7%A9%BA%E9%97%B4%E7%9A%84%E9%AB%98%E9%80%9A%E7%AD%94%E7%96%91/</link><pubDate>Wed, 06 Nov 2024 06:57:56 +0000</pubDate><author>huang8604@163.com (wentao)</author><guid>https://huang8604.github.io/posts/android-%E8%AE%B0%E5%BD%95%E7%B3%BB%E7%BB%9F%E7%A9%BA%E9%97%B4%E7%9A%84%E9%AB%98%E9%80%9A%E7%AD%94%E7%96%91/</guid><category domain="https://huang8604.github.io/categories/android/">Android</category><description>&lt;p&gt;&lt;a class="lightgallery" href="https://huang8604.github.io/obsidion/Media/Case_%2005784001%20~%20Customer%20Engineering%20Community.pdf" title="Case\_ 05784001 ~ Customer Engineering Community.pdf" data-thumbnail="/obsidion/Media/Case_%2005784001%20~%20Customer%20Engineering%20Community.pdf" data-sub-html="&lt;h2&gt;Case\_ 05784001 ~ Customer Engineering Community.pdf&lt;/h2&gt;"&gt;&lt;img loading="lazy" src='https://huang8604.github.io/obsidion/Media/Case_%2005784001%20~%20Customer%20Engineering%20Community.pdf' alt="Case\_ 05784001 ~ Customer Engineering Community.pdf"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="lightgallery" href="https://picgo.myjojo.fun:666/i/2024/05/23/664f083143580.png" title="image.png" data-thumbnail="https://picgo.myjojo.fun:666/i/2024/05/23/664f083143580.png" data-sub-html="&lt;h2&gt;image.png&lt;/h2&gt;"&gt;&lt;img loading="lazy" src='https://picgo.myjojo.fun:666/i/2024/05/23/664f083143580.png' alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="details admonition note open disabled"&gt;
 &lt;div class="details-summary admonition-title"&gt;&lt;i class="icon fa-fw fa-solid fa-pencil-alt" aria-hidden="true"&gt;&lt;/i&gt;高通回复容量疑问&lt;/div&gt;
 &lt;div class="details-content"&gt;
 &lt;div class="admonition-content"&gt;&lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;&lt;p&gt;case中提到的resize/recovery，就是我们之前提到的恢复出厂设置后userdata拓展到剩余空间，16G变32G的动作。&lt;br&gt;
按高通的回复截图，resize/recovery之前 ui上面显示的总空间/已用空间大小没有任何参考意义（参考截图第四段落最后一行。这里提到的不可信大小就是之前你们看到的下载软件后开机，系统占用16G，总容量32G）&lt;br&gt;
高通认为resize之后，此时UI上显示的存储空间数据是可信的（参考截图倒数第三行，这里提到的可信大小就是你们了解的恢复出厂设置后系统占用32G，总容量64G。我们和高通在case上沟通时提供的机器数据是基于128G的，所以高通在引用数据时写的是128G）&lt;br&gt;
另外，目前PNC560我们已修改为下载软件后开机时自动拓展，无需再次恢复出厂设置了，所以用户是看不到16G系统占用这个resize之前的数据的。&lt;/p&gt;</description></item><item><title>Archer&amp;ArcherIS AP签名方案总结</title><link>https://huang8604.github.io/posts/archerarcheris-ap%E7%AD%BE%E5%90%8D%E6%96%B9%E6%A1%88%E6%80%BB%E7%BB%93/</link><pubDate>Wed, 06 Nov 2024 06:57:56 +0000</pubDate><author>huang8604@163.com (wentao)</author><guid>https://huang8604.github.io/posts/archerarcheris-ap%E7%AD%BE%E5%90%8D%E6%96%B9%E6%A1%88%E6%80%BB%E7%BB%93/</guid><category domain="https://huang8604.github.io/categories/android/">Android</category><description>&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;style: nestedList # TOC style (nestedList|inlineFirstLevel)
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;maxLevel: 0 # Include headings up to the speficied level
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;includeLinks: true # Make headings clickable
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;debugInConsole: false # Print debug info in Obsidian console&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 class="heading-element" id="关于ap端-hsm签名的配置说明"&gt;&lt;span&gt;关于AP端 HSM签名的配置说明&lt;/span&gt;
 &lt;a href="#%e5%85%b3%e4%ba%8eap%e7%ab%af-hsm%e7%ad%be%e5%90%8d%e7%9a%84%e9%85%8d%e7%bd%ae%e8%af%b4%e6%98%8e" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Archer 项目签名使用的加密狗来自YubiHSM&lt;br&gt;
具体的一些操作说明需要到官网寻找：&lt;br&gt;
&lt;a href="https://developers.yubico.com/YubiHSM2/"target="_blank" rel="external nofollow noopener noreferrer"&gt;YubiHSM2&lt;/a&gt;&lt;/p&gt;</description></item><item><title>AMS -- ActivityRecord、TaskRecord、ActivityStack、ActivityDisplay、ActivityStackSupervisor</title><link>https://huang8604.github.io/posts/ams--activityrecordtaskrecordactivitystackactivitydisplayactivitystacksupervisor/</link><pubDate>Wed, 06 Nov 2024 06:57:52 +0000</pubDate><author>huang8604@163.com (wentao)</author><guid>https://huang8604.github.io/posts/ams--activityrecordtaskrecordactivitystackactivitydisplayactivitystacksupervisor/</guid><category domain="https://huang8604.github.io/categories/ams/">AMS</category><category domain="https://huang8604.github.io/categories/android/">Android</category><description>&lt;p&gt;ActivityRecord、TaskRecord、ActivityStack、ActivityDisplay、ActivityStackSupervisor 的关系&lt;/p&gt;</description></item></channel></rss>